// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
  studySession  StudySession[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model StudySession {
  id        Int        @id @default(autoincrement())
  year      Int
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  semesters Semester[]
}

model Semester {
  id             Int          @id @default(autoincrement())
  session        String
  studySession   StudySession @relation(fields: [studySessionId], references: [id])
  studySessionId Int
  courses        Course[]

  @@index([session], name: "semesterCourseIndex")
}

model Course {
  id         Int      @id @default(autoincrement())
  title      String
  grade      String
  units      Int
  semester   Semester @relation(fields: [semesterId], references: [id])
  semesterId Int
  gpa        Float?   @default(0.0)
  cgpa       Float?   @default(0.0)

  @@index([title], name: "courseTitleIndex")
}
